
\chapter{Methodology}

The current technical report involved an explanation of the HRI connection,
the HRI application, and the hand gesture control algorithm.
% , and a briefly information of the wireless accelerometer trans-receiver and the patrol mobile robot.

\section{HRI Setup}

In order to use the HRI application, a scheme setup is shown in  Figure~\ref{fig:hbd}, and the
following steps are provided as an explanation of HRI connection:
% \begin{figure}[tbp]
\begin{figure}[h!]
  \begin{center}
  \includegraphics[scale=.3]{hridd-blockdiagram}
    \caption[HRI]{Human-Robot Interface Dance Demo Scheme Connection}
    \label{fig:hbd}
  \end{center}
\end{figure}


\begin{enumerate}
 \item Turn on the Pioneer Mobile Robot
 \item Connect the Aria USB Connector and the ZSTAR USB Stick to the available laptop's USB plugs.
 \item The user must wear strictly the USB sensor board on his/her left wrist  as shown in Figure~\ref{fig:wsb}, 
 and it is important to emphasize that similar sensor position is crucial to obtain same results.
 \item Finally, turn on the sensor board by pushing any of the three white pushbuttons.
\end{enumerate}



% the 
% blue line indicating a USB Stick connector 
% 
% (Figure~\ref{fig:hbd}) 
% 
% The figure illustrates the InterBot architecture, 
% showing the various modules of the multimodal human-robot interface (Figure~\ref{fig:hbd})


% Our linguistic analyses of the input is integrated with various other modules on several 
% different mobile and stationary robot platforms to enable spatial referencing and reasoning, 
% as well as the ability to interact with various domain-specific applications.  
% The figure illustrates the InterBot architecture, showing the various modules of the multimodal human-robot interface. 
% REF [http://www.nrl.navy.mil/aic/iss/aas/IntelligentHumanRobotInteractions.php]


% \begin{figure}[tbp]
\begin{figure}[h!]
  \begin{center}
  \includegraphics[scale=.3]{wsb}
    \caption[HRI]{Wearable Sensor Board.}
    \label{fig:wsb}
  \end{center}
\end{figure}



For more detailed information about the Wireless Sensing Triple Axis Reference (ZSTAR3) 
and the patrol mobile robot, please visit the references \cite{zstar, probot}.
% 
% \subsection{Wireless Accelerometer Sensor}
% The Wireless Sensing Triple Axis Reference (ZSTAR3) 
% is used for connection between the sensor and GNU-Linux PC, allowing the read of the accelerometer.
% The ZSTAR3 consists of two boards  \cite{zstar}:
% 
% \begin{enumerate}
% \item Sensor Board (or remote board) is a board designed for demonstrating Freescaleâ€™s new 3-axes
% accelerometer solution for digital MMA7455L accelerometric data sensing, 
% and the 2.4 GHz RF modem with an HCS08 microcontroller in a one package solution as an easy 
% design for remote sensors  (Figure~\ref{fig:hbd}).
% \item USB stick, with the MC13191 RF front-end, and the HC08 family MCHC908JW32 for the USB
% communication (Figure~\ref{fig:hbd}).
% \end{enumerate}
% 
% \subsection{Pioner Robot}



\section{HRI Application}

You should first download the source tarball from 
\href{https://sites.google.com/site/perezxochicale/projects/demodance/cpp-source-code/hridancedemo-0.0.1.tar.gz}{hridancedemo-0.0.1.tar.gz}
, then uncompress it using: \verb|$tar xzvfp hridancedemo-0.0.1.tar.gz|.

After uncompressing, a new directory in \verb|~/(hridancedemo-0.0.1)| will have been
created. Go into this directory and 
change the executable permissions and finally run the application by using the following commands lines:\\

\verb| $ cd ~/dancedemoapp/appplication|  \\

\verb| $ sudo chmod +x usbresetapp dancedemoapp|  \\

\verb| $ sudo ./dancedemoapp|

\section{Hand Gesture Recognition Algorithm}

Considering the four gestures of the user 

(Figure~\ref{fig:pfs})

% \begin{figure}[tbp]
\begin{figure}[h!]
  \begin{center}
  \includegraphics[scale=.28]{demodance}
%     \includegraphics[width=0.7\textwidth]{demodance}
%     \includegraphics{demodance}
    \caption{Left Hand Gestures with the robot arrows movement directions.}
    \label{fig:pfs}
  \end{center}
\end{figure}



Reading an real-time of the data accelerometer is quite important. Hence, having read the $X, Y, Z$ accelerations from the sensor board, the arithmetic mean and the variance 
is computed by using the Equations \ref{eq:msd}.

\begin{eqnarray}
 \mu =\frac{1}{n}\cdot \sum_{i=1}^n{x_i},  \quad \operatorname{Var}(X)= \frac{1}{n} \sum_{i=1}^n (x_i - \mu)^2. 
             \label{eq:msd}
\end{eqnarray}

The four gestures  described on (algorithm (\ref{code:hridd}))
% The arithmetic mean is the "standard" average, often simply called the "mean".
an algorithm is implemented with the 
we develop an algorithm (\ref{code:hridd})
for four gestures.


\begin{algorithm}[h!]
  \caption{An example for format For \& While Loop in Algorithm}
  \begin{algorithmic}[1]
%   \State $i=1$
  \State $FRAMEINTERVAL=5$
    \While {!kbhit()}  
      \State Accelerometer Adquisition Data 
%       \State ACCacumulator
            \If { (iteration mod FRAMEINTERVAL) $== 0$ }
		\State  compute the mean and standard deviation
		\If { $(\mu_X < 1.1)$  and $\mu_X > 0.5$ } 
		\State Robot Spin to the left at 150 mm per second
		\EndIf
		
		\If { $\mu_X < 0.5$  and  $\mu_X > -0.3$ }  
		    \If {$\mu_Y > 0.5$}
		    \State Robot move fordward at 120 mm per second
		    \Else 
		    \State Robot move backward at 120 mm per second
		    \EndIf
		\EndIf
		
		\If { $\mu_X < -0.3$  and  $\mu_X > -1.1$ } 
		\State Robot Spin to the right at 150 mm per second
		\EndIf		
	
% 	   \State  Clearing ACCacumulator
	   \EndIf
	   
	   
%     \State increment i
  \EndWhile
  \label{code:hridd}
  \end{algorithmic}
\end{algorithm}







% REFERENCE
% http://nckunoname.pixnet.net/blog/post/67368529-%E7%94%A8latex%E5%AF%ABalgorithm



% 
% \begin{algorithm}[h!]
%   \caption{Conjugate Gradient Algorithm with Dynamic Step-Size Control}
%   \label{alg::conjugateGradient}
%   \begin{algorithmic}[1]
%     \Require
%       $f(x)$: objective funtion;
%       $x_0$: initial solution;
%       $s$: step size;
%     \Ensure
%       optimal $x^{*}$    
%     \State initial $g_0=0$ and $d_0=0$;
%     \Repeat
%       \State compute gradient directions $g_k=\bigtriangledown f(x_k)$;
%       \State compute Polak-Ribiere parameter $\beta_k=\frac{g_k^{T}(g_k-g_{k-1})}{\parallel g_{k-1} \parallel^{2}}$;
%       \State compute the conjugate directions $d_k=-g_k+\beta_k d_{k-1}$;
%       \State compute the step size $\alpha_k=s/\parallel d_k \parallel_{2}$;
%     \Until{($f(x_k)>f(x_{k-1})$)}
%   \end{algorithmic}
% \end{algorithm}


% 
% \begin{algorithm}[h!]
%   \caption{An example for format For \& While Loop in Algorithm}
%   \begin{algorithmic}[1]
%     \For{each $i\in [1,9]$}
%       \State initialize a tree $T_{i}$ with only a leaf (the root);
%       \State $T=T\cup T_{i};$
%     \EndFor
%     \ForAll {$c$ such that $c\in RecentMBatch(E_{n-1})$}
%       \label{code:TrainBase:getc}
%       \State $T=T\cup PosSample(c)$;
%       \label{code:TrainBase:pos}
%     \EndFor;
%     \For{$i=1$; $i<n$; $i++$ }
%       \State $//$ Your source here;
%     \EndFor
%     \For{$i=1$ to $n$}
%       \State $//$ Your source here;
%     \EndFor
%     \State $//$ Reusing recent base classifiers.
%     \label{code:recentStart}
%     \While {$(|E_n| \leq L_1 )and( D \neq \phi)$}
%       \State Selecting the most recent classifier $c_i$ from $D$;
%       \State $D=D-c_i$;
%       \State $E_n=E_n+c_i$;
%     \EndWhile
%     \label{code:recentEnd}
%   \end{algorithmic}
% \end{algorithm}

% \section{Experimental Setups}





\cite{Auth09}.
\cite{Mono08}.
\cite{Mono08,Auth09}.


%%% Local Variables: 
%%% mode: latex
%%% TeX-master: "../mainrep"
%%% End: 
